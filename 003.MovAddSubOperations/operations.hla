program my_program;
#include ("stdlib.hhf")

static
    i8:         int8    := -8;
    i16:        int16   := -16;
    i32:        int32   := -32;
    // also supports agnostic types
    my_byte:    byte;
    my_word:    word;
    my_dword:   dword;
    my_qword:   qword;
    my_lword:   lword;

begin my_program;
    stdout.put("i8: ", i8, " i16: ", i16, " i32: ", i32, nl);

    // negate i8, use lower A register - AL - since it is a byte long
    mov(0, al);
    // subtract -8 from 0 => 8
    sub(i8, al);
    mov(al, i8);

    // AX because it is a word long (2 bytes)
    mov(0, ax);
    sub(i16, ax);
    mov(ax, i16);

    // EAX because it is a double-word long (4 bytes)
    mov(0, eax);
    sub(i32, eax);
    mov(eax, i32);

    stdout.put("After negate: i8: ", i8, " i16: ", i16, " i32: ", i32, nl);

    // showing add operation
    add(32323200, i32);
    stdout.put("After add: i8: ", i8, " i16: ", i16, " i32: ", i32, nl);
end my_program;